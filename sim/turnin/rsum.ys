# Jiaming Ji (jj35553)
# Iteratively sum linked list elements

    .pos 0
init: 
    irmovq Stack, %rsp
    call Main
    halt

    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

Main:
    irmovq ele1, %rdi
    call rsum
    ret


rsum:
    pushq %r12    # use r12 as callee save register 
    xorq %rax, %rax    # set return val to 0
    andq %rdi, %rdi    # set CC
    je test
    mrmovq (%rdi), %r12    # move the value pointed to in r12, using stack because of local variable 
    mrmovq 8(%rdi), %rdi   # (rdi + 8)points to the next value, store that value in rdi
    call rsum     # pass in the new rdi to the subroutine call
    addq %r12, %rax

test:
    popq %r12
    ret 

    .pos 0x100
Stack:
